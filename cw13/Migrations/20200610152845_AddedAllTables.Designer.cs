// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cw13.Models;

namespace cw13.Migrations
{
    [DbContext(typeof(CukierniaContext))]
    [Migration("20200610152845_AddedAllTables")]
    partial class AddedAllTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("cw13.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdKlient");

                    b.ToTable("Klients");

                    b.HasData(
                        new
                        {
                            IdKlient = 1,
                            Imie = "Anna",
                            Nazwisko = "Mazur"
                        },
                        new
                        {
                            IdKlient = 2,
                            Imie = "Paweł",
                            Nazwisko = "Mazur"
                        },
                        new
                        {
                            IdKlient = 3,
                            Imie = "Piotr",
                            Nazwisko = "Stankiewicz"
                        });
                });

            modelBuilder.Entity("cw13.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdPracownik");

                    b.ToTable("Pracownicy");

                    b.HasData(
                        new
                        {
                            IdPracownik = 1,
                            Imie = "Jan",
                            Nazwisko = "Panek"
                        },
                        new
                        {
                            IdPracownik = 2,
                            Imie = "Paweł",
                            Nazwisko = "Topiel"
                        },
                        new
                        {
                            IdPracownik = 3,
                            Imie = "Artur",
                            Nazwisko = "Kazol"
                        });
                });

            modelBuilder.Entity("cw13.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CenaZaSzt")
                        .HasColumnType("float");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdWyrobu");

                    b.ToTable("WyrobyCukiernicze");

                    b.HasData(
                        new
                        {
                            IdWyrobu = 1,
                            CenaZaSzt = 20.5,
                            Nazwa = "Tort",
                            Typ = "słodkie"
                        },
                        new
                        {
                            IdWyrobu = 2,
                            CenaZaSzt = 10.0,
                            Nazwa = "Sernik",
                            Typ = "Eko słodkie"
                        },
                        new
                        {
                            IdWyrobu = 3,
                            CenaZaSzt = 4.5,
                            Nazwa = "Paczek",
                            Typ = "słodkie"
                        });
                });

            modelBuilder.Entity("cw13.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdZamowienia");

                    b.ToTable("Zamowienia");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            DataPrzyjecia = new DateTime(2020, 6, 10, 17, 28, 45, 343, DateTimeKind.Local).AddTicks(7543),
                            DataRealizacji = new DateTime(2020, 6, 10, 17, 28, 45, 349, DateTimeKind.Local).AddTicks(4164),
                            IdKlient = 1,
                            IdPracownik = 1,
                            Uwagi = "Zapakowac na prezent"
                        },
                        new
                        {
                            IdZamowienia = 2,
                            DataPrzyjecia = new DateTime(2020, 6, 10, 17, 28, 45, 349, DateTimeKind.Local).AddTicks(7489),
                            DataRealizacji = new DateTime(2020, 6, 10, 17, 28, 45, 349, DateTimeKind.Local).AddTicks(7521),
                            IdKlient = 2,
                            IdPracownik = 3,
                            Uwagi = "Bez orzechów"
                        },
                        new
                        {
                            IdZamowienia = 3,
                            DataPrzyjecia = new DateTime(2020, 6, 10, 17, 28, 45, 349, DateTimeKind.Local).AddTicks(7561),
                            DataRealizacji = new DateTime(2020, 6, 10, 17, 28, 45, 349, DateTimeKind.Local).AddTicks(7565),
                            IdKlient = 3,
                            IdPracownik = 1,
                            Uwagi = "Zapakowac na prezent"
                        });
                });

            modelBuilder.Entity("cw13.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobu")
                        .HasColumnType("int");

                    b.Property<int>("IdZamowienia")
                        .HasColumnType("int");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdWyrobu", "IdZamowienia");

                    b.ToTable("Zamowienia_WyrobCukiernicze");

                    b.HasData(
                        new
                        {
                            IdWyrobu = 1,
                            IdZamowienia = 1,
                            Ilosc = 10,
                            Uwagi = "null"
                        },
                        new
                        {
                            IdWyrobu = 2,
                            IdZamowienia = 2,
                            Ilosc = 1,
                            Uwagi = "null"
                        },
                        new
                        {
                            IdWyrobu = 3,
                            IdZamowienia = 3,
                            Ilosc = 30,
                            Uwagi = "null"
                        },
                        new
                        {
                            IdWyrobu = 1,
                            IdZamowienia = 2,
                            Ilosc = 1,
                            Uwagi = "null"
                        },
                        new
                        {
                            IdWyrobu = 2,
                            IdZamowienia = 1,
                            Ilosc = 3,
                            Uwagi = "null"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
